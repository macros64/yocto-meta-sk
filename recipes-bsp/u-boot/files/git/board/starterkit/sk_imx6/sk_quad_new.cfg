/*
 * Copyright (C) 2014 starterkit.ru
 *
 * SPDX-License-Identifier: GPL-2.0+
 *
 * Refer doc/README.imximage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */

/* image version */
IMAGE_VERSION 2

#define __ASSEMBLY__
#include <config.h>
#include "asm/arch/mx6-ddr.h"
#include "asm/arch/iomux.h"
#include "asm/arch/crm_regs.h"

/*
 * Boot Device :
 * one of sd, nand
 */
#if defined (CONFIG_SYS_BOOT_NAND)
BOOT_FROM      nand
#elif defined (CONFIG_SYS_BOOT_MMC)
BOOT_FROM      sd
#else
	#error "SK sys boot not configured"
#endif

DATA 4, 0x020C4018, 0x00060324

/* DDR IO TYPE */
DATA 4, 0x020e0798, 0x000C0000  /* IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE */
DATA 4, 0x020e0758, 0x00000000  /* IOMUXC_SW_PAD_CTL_GRP_DDRPKE */

/* CLOCK */
DATA 4, 0x020e0588, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0 */
DATA 4, 0x020e0594, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1 */

/* ADDRESS */
DATA 4, 0x020e056c, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS */
DATA 4, 0x020e0578, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS */
DATA 4, 0x020e074c, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_ADDDS */

/* Control */
DATA 4, 0x020e057c, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET */
DATA 4, 0x020e058c, 0x00000000  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register IOMUXC_SW_PAD_CTL_GRP_CTLDS */
DATA 4, 0x020e059c, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0 */
DATA 4, 0x020e05a0, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1 */
DATA 4, 0x020e078c, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_CTLDS */

/* Data Strobes */
DATA 4, 0x020e0750, 0x00020000  /* IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL */
DATA 4, 0x020e05a8, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 */
DATA 4, 0x020e05b0, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 */
DATA 4, 0x020e0524, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 */
DATA 4, 0x020e051c, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 */
DATA 4, 0x020e0518, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 */
DATA 4, 0x020e050c, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 */
DATA 4, 0x020e05b8, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 */
DATA 4, 0x020e05c0, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 */

/* Data */
DATA 4, 0x020e0774, 0x00020000  /* IOMUXC_SW_PAD_CTL_GRP_DDRMODE */
DATA 4, 0x020e0784, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B0DS */
DATA 4, 0x020e0788, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B1DS */
DATA 4, 0x020e0794, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B2DS */
DATA 4, 0x020e079c, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B3DS */
DATA 4, 0x020e07a0, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B4DS */
DATA 4, 0x020e07a4, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B5DS */
DATA 4, 0x020e07a8, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B6DS */
DATA 4, 0x020e0748, 0x00000028  /* IOMUXC_SW_PAD_CTL_GRP_B7DS */

DATA 4, 0x020e05ac, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0 */
DATA 4, 0x020e05b4, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1 */
DATA 4, 0x020e0528, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2 */
DATA 4, 0x020e0520, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3 */
DATA 4, 0x020e0514, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4 */
DATA 4, 0x020e0510, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5 */
DATA 4, 0x020e05bc, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6 */
DATA 4, 0x020e05c4, 0x00000028  /* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7 */

/*
 * DDR Controller Registers
 *
 * Manufacturer:         Samsung
 * Device Part Number:   K4B2G1646E-BCK0
 * Clock Freq.:          528MHz
 * Density per CS in Gb: 8
 * Chip Selects used:    1
 * Number of Banks:      8
 * Row address:          14
 * Column address:       10
 * Data bus width        64
 */
DATA 4, 0x021b001c, 0x00008000  /* MMDC0_MDSCR, set the Configuration request bit during MMDC set up */

/* Calibration setup */
DATA 4, 0x021b0800, 0xA1390003  /* DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration */

/* For target board, may need to run write leveling calibration to fine tune these settings */
DATA 4, 0x021b080c, 0x0011000E
DATA 4, 0x021b0810, 0x000E001B
DATA 4, 0x021b480c, 0x00190015
DATA 4, 0x021b4810, 0x00070018

/* Read DQS Gating calibration */
DATA 4, 0x021b083c, 0x42720306  /* MPDGCTRL0 PHY0 */
DATA 4, 0x021b0840, 0x026F0266  /* MPDGCTRL1 PHY0 */
DATA 4, 0x021b483c, 0x4273030A  /* MPDGCTRL0 PHY1 */
DATA 4, 0x021b4840, 0x02740240  /* MPDGCTRL1 PHY1 */

/* Read calibration */
DATA 4, 0x021b0848, 0x45393B3E  /* MPRDDLCTL PHY0 */
DATA 4, 0x021b4848, 0x403A3747  /* MPRDDLCTL PHY1 */

/* Write calibration */
DATA 4, 0x021b0850, 0x40434541  /* MPWRDLCTL PHY0 */
DATA 4, 0x021b4850, 0x473E4A3B  /* MPWRDLCTL PHY1 */

/* read data bit delay (3 is the reccommended default value, although out of reset value is 0) */
DATA 4, 0x021b081c, 0x33333333  /* DDR_PHY_P0_MPREDQBY0DL3 */
DATA 4, 0x021b0820, 0x33333333  /* DDR_PHY_P0_MPREDQBY1DL3 */
DATA 4, 0x021b0824, 0x33333333  /* DDR_PHY_P0_MPREDQBY2DL3 */
DATA 4, 0x021b0828, 0x33333333  /* DDR_PHY_P0_MPREDQBY3DL3 */
DATA 4, 0x021b481c, 0x33333333  /* DDR_PHY_P1_MPREDQBY0DL3 */
DATA 4, 0x021b4820, 0x33333333  /* DDR_PHY_P1_MPREDQBY1DL3 */
DATA 4, 0x021b4824, 0x33333333  /* DDR_PHY_P1_MPREDQBY2DL3 */
DATA 4, 0x021b4828, 0x33333333  /* DDR_PHY_P1_MPREDQBY3DL3 */

/* Complete calibration by forced measurement */
DATA 4, 0x021b08b8, 0x00000800  /* DDR_PHY_P0_MPMUR0, frc_msr */
DATA 4, 0x021b48b8, 0x00000800  /* DDR_PHY_P0_MPMUR0, frc_msr */

/* MMDC init */
DATA 4, 0x021b0004, 0x00020036  /* MMDC0_MDPDC */
DATA 4, 0x021b0008, 0x09444040  /* MMDC0_MDOTC */
DATA 4, 0x021b000c, 0x54597955  /* MMDC0_MDCFG0 */
DATA 4, 0x021b0010, 0xFF328F64  /* MMDC0_MDCFG1 */
DATA 4, 0x021b0014, 0x01FF00DB  /* MMDC0_MDCFG2 */

/*
 * MDMISC: RALAT kept to the high level of 5
 * MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits
 * a. better operation at low frequency, for LPDDR2 freq < 100MHz, change RALAT to 3
 * b. Small performence improvment
 */
DATA 4, 0x021b0018, 0x00011740  /* MMDC0_MDMISC */
DATA 4, 0x021b001c, 0x00008000  /* MMDC0_MDSCR, set the Configuration request bit during MMDC set up */
DATA 4, 0x021b002c, 0x000026D2  /* MMDC0_MDRWD */
DATA 4, 0x021b0030, 0x00591023  /* MMDC0_MDOR */
DATA 4, 0x021b0040, 0x00000027  /* Chan0 CS0_END */
DATA 4, 0x021b0000, 0x831A0000  /* MMDC0_MDCTL */

/* Mode register writes */
DATA 4, 0x021b001c, 0x02088032  /* MMDC0_MDSCR, MR2 write, CS0 */
DATA 4, 0x021b001c, 0x00008033  /* MMDC0_MDSCR, MR3 write, CS0 */
DATA 4, 0x021b001c, 0x00048031  /* MMDC0_MDSCR, MR1 write, CS0 */
DATA 4, 0x021b001c, 0x19408030  /* MMDC0_MDSCR, MR0write, CS0 */
DATA 4, 0x021b001c, 0x04008040  /* MMDC0_MDSCR, ZQ calibration command sent to device on CS0 */

DATA 4, 0x021b0020, 0x00007800  /* MMDC0_MDREF */
DATA 4, 0x021b0818, 0x00022227  /* DDR_PHY_P0_MPODTCTRL */
DATA 4, 0x021b4818, 0x00022227  /* DDR_PHY_P1_MPODTCTRL */
DATA 4, 0x021b0004, 0x00025576  /* MMDC0_MDPDC now SDCTL power down enabled */
DATA 4, 0x021b0404, 0x00011006  /* MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached */
DATA 4, 0x021b001c, 0x00000000  /* MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete) */

/* set the default clock gate to save power */
DATA 4, CCM_CCGR0, 0x00C03F3F
DATA 4, CCM_CCGR1, 0x0030FC03
DATA 4, CCM_CCGR2, 0x0FFFC000
DATA 4, CCM_CCGR3, 0x3FF00000
/* enable NAND/GPMI/BCH clocks */
DATA 4, CCM_CCGR4, 0xFFFFF300
DATA 4, CCM_CCGR5, 0x0F0000C3
DATA 4, CCM_CCGR6, 0x000003FF

/* enable AXI cache for VDOA/VPU/IPU */
DATA 4, MX6_IOMUXC_GPR4, 0xF00000CF
/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
DATA 4, MX6_IOMUXC_GPR6, 0x007F007F
DATA 4, MX6_IOMUXC_GPR7, 0x007F007F
